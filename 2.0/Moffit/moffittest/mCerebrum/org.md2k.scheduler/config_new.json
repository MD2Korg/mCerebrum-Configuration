{
  "id": "MOFFITT",
  "type": "STUDY",
  "title": "Mofitt Study",
  "scheduler": [
    {
      "id": "RANDOM",
      "type": "EMA",
      "title": "Random EMA",
      "listen": [
        {
          "type": "DAY",
          "id": "START"
        },
        {
          "type": "DAY",
          "id": "END"
        }
      ],
      "when": [
        {
          "consider_if": "active_day() == TRUE && count_sample(get_last_sample(0,DAY,START), get_last_sample(0,DAY,START)+time(04:00:00), EMA, RANDOM)==0",
          "trigger_rule": [
            {
              "when": "RANDOM",
              "start_time": "get_last_sample(0,DAY,START)",
              "end_time": "get_last_sample(0,DAY,START)+time(02:00:00)",
              "condition": "privacy()==FALSE && count_sample(now()-time(01:00,00),now(),EMA,RANDOM)==0 && count_sample(now()-time(00:15:00), now(), EMA)==0 && count_sample(now-time(00:15:00), now(), EMI)==0 && get_phone_battery()>10 && not_driving(time(00:05:00))==TRUE && not_active(time(00:01:00))==TRUE && data_quality(time(00:05:00), DATA_QUALITY, RESPIRATION, AUTOSENSE, CHEST)>=66.6"
            },
            {
              "when": "RANDOM",
              "start_time":"LAST_SCHEDULER",
              "end_time": "get_sample(dt=DAY,di=START)+time(03:00:00)",
              "condition": "privacy()==FALSE && count_sample(now()-time(01:00,00),now(),EMA,RANDOM)==0 && count_sample(now()-time(00:15:00), now(), EMA)==0 && count_sample(now-time(00:15:00), now(), EMI)==0 && get_phone_battery()>10 && not_driving(time(00:05:00))==TRUE && not_active(time(00:01:00))==TRUE && data_quality(time(00:05:00), DATA_QUALITY, RESPIRATION, AUTOSENSE, CHEST)>=66.6"
            },
            {
              "when": "IMMEDIATE",
              "condition": "privacy()==FALSE && count_sample(now()-time(01:00,00),now(),EMA,RANDOM)==0 && count_sample(now()-time(00:15:00), now(), EMA)==0 && count_sample(now-time(00:15:00), now(), EMI)==0 && not_driving(time(00:05:00))==TRUE",
              "retry_interval":"00:01:00",
              "retry_until":"get_last_sample(0,DAY,START)+time(04:00:00)"
            }
          ]
        }
      ]
    },
    {
      "id": "LOW_STRESS",
      "type": "EMI",
      "title": "EMI for low stress",
      "listen": [
        {
          "type": "DAY",
          "id": "START"
        },
        {
          "type": "DAY",
          "id": "END"
        }
      ],
      "when": [
        {
          "consider_if": "active_day() == TRUE && count_sample(get_last_sample(0,DAY,START), get_last_sample(0,DAY,START)+time(04:00:00), EMI, LOW_STRESS)==0",
          "trigger_rule": [
            {
              "when": "RANDOM",
              "start_time": "get_last_sample(0,DAY,START)",
              "end_time": "get_last_sample(0,DAY,START)+time(02:00:00)",
              "condition": "privacy()==FALSE && count_sample(now()-time(00:30:00),now(),EMI)==0 && count_sample(now()-time(00:15:00), now(), EMA)==0 && count_sample(now-time(00:15:00), now(), EMI)==0  && get_phone_battery()>10 && not_driving(time(00:05:00))==TRUE && not_active(time(00:01:00))==TRUE && data_quality(time(00:05:00), DATA_QUALITY, RESPIRATION, AUTOSENSE, CHEST)>=66.6"
            },
            {
              "when": "RANDOM",
              "start_time":"now",
              "end_time": "get_sample(dt=DAY,di=START)+time(03:00:00)",
              "condition": "privacy()==FALSE && count_sample(now()-time(00:30:00),now(),EMI)==0 && count_sample(now()-time(00:15:00), now(), EMA)==0 && count_sample(now-time(00:15:00), now(), EMI)==0  && get_phone_battery()>10 && not_driving(time(00:05:00))==TRUE && not_active(time(00:01:00))==TRUE && data_quality(time(00:05:00), DATA_QUALITY, RESPIRATION, AUTOSENSE, CHEST)>=66.6"
            },
            {
              "when": "IMMEDIATE",
              "condition": "privacy()==FALSE && count_sample(now()-time(00:30:00),now(),EMI)==0 && count_sample(now()-time(00:15:00), now(), EMA)==0 && count_sample(now-time(00:15:00), now(), EMI)==0 && not_driving(time(00:05:00))==TRUE",
              "retry_interval":"00:01:00",
              "retry_until":"get_last_sample(0,DAY,START)+time(04:00:00)"
            }
          ]
        }
      ]
    },
    {
      "id": "HIGH_STRESS",
      "type": "EMI",
      "title": "EMI for high stress",
      "listen": [
        {
          "type": "DAY",
          "id": "START"
        },
        {
          "type": "DAY",
          "id": "END"
        },
        {
          "type": "ORG_MD2K_CSTRESS_STRESS_EPISODE_CLASSIFICATION"
        }
      ],
      "when": [
        {
          "consider_if": "active_day() == TRUE && count_sample(get_last_sample(0,DAY,START), get_last_sample(0,DAY,START)+time(04:00:00), EMI, HIGH_STRESS)==0 && is_stressed(00:03:00)==TRUE",
          "trigger_rule": [
            {
              "when": "IMMEDIATE",
              "condition": "privacy()==FALSE && count_sample(now()-time(00:30:00),now(),EMI)==0 && count_sample(now()-time(00:15:00), now(), EMA)==0 && count_sample(now-time(00:15:00), now(), EMI)==0 && get_phone_battery()>10 && not_driving(time(00:05:00))==TRUE && not_active(time(00:01:00))==TRUE && data_quality(time(00:05:00), DATA_QUALITY, RESPIRATION, AUTOSENSE, CHEST)>=66.6",
              "retry_interval":"00:01:00",
              "retry_until":"time(00:03:00)"
            }
          ]
        }
      ]
    }
  ]
}