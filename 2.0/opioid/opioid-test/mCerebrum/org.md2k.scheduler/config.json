{
  "id": "OPIOID",
  "type": "STUDY",
  "title": "Opioid Study",
  "scheduler_list": [
    {
      "type": "EMA",
      "id": "RANDOM",
      "title": "Random EMA",
      "listen": {
        "datasource": [
          {
            "type": "DAY",
            "id": "START"
          },
          {
            "type": "DAY",
            "id": "END"
          }
        ]
      },
      "when": [
        {
          "condition": "is_active_day() == true && get_sample_no(today()+time_offset(11:00:00), today()+time_offset(14:00:00), EMA, RANDOM)==0",
          "start_time": "today()+time_offset(11:00:00)",
          "end_time": "today()+time_offset(14:00:00)",
          "trigger_rule": [
            {
              "trigger_time": "today()+time_offset(11:00:00)+random(time_offset(01:30:00))",
              "condition": "is_privacy_on()==false && get_sample_no(now()-time_offset(00:30:00),now(),EMA,MORNING_DIARY)==0 && get_sample_no(now()-time_offset(00:30:00), now(), EMA, EVENING_DIARY)==0 && get_sample_no(now()-time_offset(00:30:00), now(), EMA, EVENT_CONTINGENT_ENTRY)==0"
            },
            {
              "trigger_time": "today()+time_offset(12:30:00)+random(time_offset(01:00:00))",
              "condition": "is_privacy_on()==false && get_sample_no(now()-time_offset(00:30:00),now(),EMA,MORNING_DIARY)==0 && get_sample_no(now()-time_offset(00:30:00), now(), EMA, EVENING_DIARY)==0 && get_sample_no(now()-time_offset(00:30:00), now(), EMA, EVENT_CONTINGENT_ENTRY)==0"
            },
            {
              "trigger_time": "now()",
              "condition": "is_privacy_on()==false && get_sample_no(now()-time_offset(00:30:00),now(),EMA,MORNING_DIARY)==0 && get_sample_no(now()-time_offset(00:30:00), now(), EMA, EVENING_DIARY)==0",
              "retry_after": "time_offset(00:01:00)"
            }
          ]
        },
        {
          "condition": "is_active_day() == true && get_sample_no(today()+time_offset(14:00:00), today()+time_offset(17:00:00), EMA, RANDOM)==0",
          "start_time": "today()+time_offset(14:00:00)",
          "end_time": "today()+time_offset(17:00:00)",
          "trigger_rule": [
            {
              "trigger_time": "today()+time_offset(14:00:00)+random(time_offset(01:30:00))",
              "condition": "is_privacy_on()==false && get_sample_no(now()-time_offset(00:30:00),now(),EMA,MORNING_DIARY)==0 && get_sample_no(now()-time_offset(00:30:00), now(), EMA, EVENING_DIARY)==0 && get_sample_no(now()-time_offset(00:30:00), now(), EMA, EVENT_CONTINGENT_ENTRY)==0"
            },
            {
              "trigger_time": "today()+time_offset(15:30:00)+random(time_offset(01:00:00))",
              "condition": "is_privacy_on()==false && get_sample_no(now()-time_offset(00:30:00),now(),EMA,MORNING_DIARY)==0 && get_sample_no(now()-time_offset(00:30:00), now(), EMA, EVENING_DIARY)==0 && get_sample_no(now()-time_offset(00:30:00), now(), EMA, EVENT_CONTINGENT_ENTRY)==0"
            },
            {
              "trigger_time": "now()",
              "condition": "is_privacy_on()==false && get_sample_no(now()-time_offset(00:30:00),now(),EMA,MORNING_DIARY)==0 && get_sample_no(now()-time_offset(00:30:00), now(), EMA, EVENING_DIARY)==0",
              "retry_after": "time_offset(00:01:00)"
            }
          ]
        },
        {
          "condition": "is_active_day() == true && get_sample_no(today()+time_offset(17:00:00), today()+time_offset(20:00:00), EMA, RANDOM)==0",
          "start_time": "today()+time_offset(17:00:00)",
          "end_time": "today()+time_offset(20:00:00)",
          "trigger_rule": [
            {
              "trigger_time": "today()+time_offset(17:00:00)+random(time_offset(01:30:00))",
              "condition": "is_privacy_on()==false && get_sample_no(now()-time_offset(00:30:00),now(),EMA,MORNING_DIARY)==0 && get_sample_no(now()-time_offset(00:30:00), now(), EMA, EVENING_DIARY)==0 && get_sample_no(now()-time_offset(00:30:00), now(), EMA, EVENT_CONTINGENT_ENTRY)==0"
            },
            {
              "trigger_time": "today()+time_offset(18:30:00)+random(time_offset(01:00:00))",
              "condition": "is_privacy_on()==false && get_sample_no(now()-time_offset(00:30:00),now(),EMA,MORNING_DIARY)==0 && get_sample_no(now()-time_offset(00:30:00), now(), EMA, EVENING_DIARY)==0 && get_sample_no(now()-time_offset(00:30:00), now(), EMA, EVENT_CONTINGENT_ENTRY)==0"
            },
            {
              "trigger_time": "now()",
              "condition": "is_privacy_on()==false && get_sample_no(now()-time_offset(00:30:00),now(),EMA,MORNING_DIARY)==0 && get_sample_no(now()-time_offset(00:30:00), now(), EMA, EVENING_DIARY)==0",
              "retry_after": "time_offset(00:01:00)"
            }
          ]
        }
      ],
      "what": [
        [
          {
            "action": {
              "transition": [
                ["NOTIFICATION_WITH_DELAY", "Ok", "RANDOM_PROMPT"],
                ["NOTIFICATION_WITH_DELAY", "Delay (10 Min)", "NOTIFICATION_DURING_DELAY"],
                ["NOTIFICATION_DURING_DELAY", "Start Now", "RANDOM_PROMPT"],
                ["NOTIFICATION_DURING_DELAY", "MISSED", "NOTIFICATION_AFTER_DELAY"],
                ["NOTIFICATION_AFTER_DELAY", "Ok", "RANDOM_PROMPT"]
              ]
            }
          }
        ]
      ]
    },
    {
      "type": "EMA",
      "id": "EVENT_CONTINGENT_ENTRY",
      "title": "Event Contingent Entry",
      "listen": {
        "datasource": [
          {
            "type": "SELF_REPORT"
          }
        ]
      },
      "when": [
        {
          "condition": "get_sample_no(get_last_sample_time(SELF_REPORT), now(), EMA, EVENT_CONTINGENT_ENTRY)==0 && get_last_sample_time(SELF_REPORT)+time_offset(00:02:00)>=now()",
          "start_time": "get_last_sample_time(SELF_REPORT)",
          "end_time": "get_last_sample_time(SELF_REPORT)+time_offset(00:03:00)",
          "trigger_rule": [
            {
              "trigger_time": "now()",
              "condition": "is_privacy_on()==false",
              "retry_after": "time_offset(00:00:02)"
            }
          ]
        }
      ],
      "what": [
        [
          {
            "action": {
              "transition": [
                ["NOTIFICATION_WITH_DELAY", "Ok", "EVENT_CONTINGENT_ENTRY"],
                ["NOTIFICATION_WITH_DELAY", "Delay (10 Min)", "NOTIFICATION_DURING_DELAY"],
                ["NOTIFICATION_DURING_DELAY", "Start Now", "EVENT_CONTINGENT_ENTRY"],
                ["NOTIFICATION_DURING_DELAY", "MISSED", "NOTIFICATION_AFTER_DELAY"],
                ["NOTIFICATION_AFTER_DELAY", "Ok", "EVENT_CONTINGENT_ENTRY"]
              ]
            }
          }
        ]
      ]
    },
    {
      "type": "EMA",
      "id": "MORNING_DIARY",
      "title": "Morning Diary",
      "listen": {
        "datasource": [
          {
            "type": "DAY",
            "id": "START"
          }
        ]
      },
      "when": [
        {
          "condition": "is_active_day() == true && get_sample_no(get_last_sample(0,DAY,START), get_last_sample(0,DAY,START)+time_offset(00:30:00), EMA, MORNING_DIARY)==0",
          "start_time": "get_last_sample(0,DAY,START)",
          "end_time": "get_last_sample(0,DAY,START)+time_offset(00:30:00)",
          "trigger_rule": [
            {
              "trigger_time": "now()",
              "condition": "is_privacy_on()==false",
              "retry_after": "time_offset(00:01:00)"
            }
          ]
        }
      ],
      "what": [
        [
          {
            "action": {
              "transition": [
                ["NOTIFICATION_WITH_DELAY", "Ok", "EMA_MORNING_DIARY"],
                ["NOTIFICATION_WITH_DELAY", "Delay (10 Min)", "NOTIFICATION_DURING_DELAY"],
                ["NOTIFICATION_DURING_DELAY", "Start Now", "EMA_MORNING_DIARY"],
                ["NOTIFICATION_DURING_DELAY", "MISSED", "NOTIFICATION_AFTER_DELAY"],
                ["NOTIFICATION_AFTER_DELAY", "Ok", "EMA_MORNING_DIARY"]
              ]
            }
          }
        ]
      ]
    },
    {
      "type": "EMA",
      "id": "EVENING_DIARY",
      "title": "Evening Diary",
      "listen": {
        "datasource": [
          {
            "type": "DAY",
            "id": "END"
          }
        ]
      },
      "when": [
        {
          "condition": "is_active_day() == false && get_sample_no(get_last_sample(0,DAY,END), get_last_sample(0,DAY,END)+time_offset(00:30:00), EMA, EVENING_DIARY)==0",
          "start_time": "get_last_sample(0,DAY,END)",
          "end_time": "get_last_sample(0,DAY,END)+time_offset(00:30:00)",
          "trigger_rule": [
            {
              "trigger_time": "now()",
              "condition": "is_privacy_on()==false",
              "retry_after": "time_offset(00:01:00)"
            }
          ]
        }
      ],
      "what": [
        [
          {
            "action": {
              "transition": [
                ["NOTIFICATION_WITH_DELAY", "Ok", "EMA_EVENING_DIARY"],
                ["NOTIFICATION_WITH_DELAY", "Delay (10 Min)", "NOTIFICATION_DURING_DELAY"],
                ["NOTIFICATION_DURING_DELAY", "Start Now", "EMA_EVENING_DIARY"],
                ["NOTIFICATION_DURING_DELAY", "MISSED", "NOTIFICATION_AFTER_DELAY"],
                ["NOTIFICATION_AFTER_DELAY", "Ok", "EMA_EVENING_DIARY"]
              ]
            }
          }
        ]
      ]
    }
  ],
  "notification_details": [
    {
      "id": "PHONE_VIBRATE_30_WITH_0_600_1200",
      "type": "PHONE_VIBRATION",
      "title": "Phone Vibration",
      "format": "THREE_TONE",
      "repeat": 6,
      "interval": "00:00:05",
      "at": [
        "00:00:00",
        "00:10:00",
        "00:20:00"
      ]
    },
    {
      "id": "PHONE_TONE_30_WITH_0_600_1200",
      "type": "PHONE_TONE",
      "title": "Phone Tone",
      "format": "THREE_TONE_HIGH",
      "repeat": 6,
      "interval": "00:00:05",
      "at": [
        "00:00:00",
        "00:10:00",
        "00:20:00"
      ]
    },
    {
      "id": "PHONE_SCREEN_30",
      "type": "PHONE_SCREEN",
      "title": "Phone Screen",
      "repeat": 1,
      "interval": "00:00:30",
      "at": [
        "00:00:00"
      ]
    },
    {
      "id": "PHONE_MESSAGE",
      "type": "PHONE_DIALOG",
      "title": "Phone Message",
      "repeat": 1,
      "interval": "00:30:00",
      "at": [
        "00:00:00"
      ],
      "message": {
        "title": "Survey",
        "content": "Time to take a survey",
        "button": [
          {
            "title": "Ok",
            "confirm": false
          }
        ]
      }
    },
    {
      "id": "PHONE_MESSAGE_DELAY_10_MINUTE",
      "type": "PHONE_DIALOG",
      "title": "Phone Message",
      "repeat": 1,
      "interval": "00:30:00",
      "at": [
        "00:00:00"
      ],
      "message": {
        "title": "Survey",
        "content": "Time to take a survey",
        "button": [
          {
            "title": "Ok",
            "confirm": false
          },
          {
            "title": "Delay (10 Min)",
            "confirm": false
          }
        ]
      }
    },
    {
      "id": "PHONE_MESSAGE_AFTER_DELAY",
      "type": "PHONE_DIALOG",
      "title": "Phone Message",
      "repeat": 1,
      "interval": "00:30:00",
      "at": [
        "00:00:00"
      ],
      "message": {
        "title": "Survey",
        "content": "Time to take a survey",
        "button": [
          {
            "title": "Ok",
            "confirm": false
          }
        ]
      }
    },
    {
      "id": "PHONE_MESSAGE_DURING_DELAY",
      "type": "PHONE_DIALOG",
      "title": "Phone Message",
      "repeat": 1,
      "interval": "00:10:00",
      "at": [
        "00:00:00"
      ],
      "message": {
        "type": "GENERAL",
        "title": "Survey delayed for 10 minutes",
        "message": "Please click \"Start\" when you are ready",
        "button": [
          {
            "title": "Start Now",
            "confirm": false
          }
        ]
      }
    }
  ],
  "notification_list": [
    {
      "id": "NOTIFICATION_0_60_120",
      "notification": [
        {
          "notification_details_id": [
            "PHONE_VIBRATE_30_WITH_0_600_1200",
            "PHONE_TONE_30_WITH_0_600_1200",
            "PHONE_MESSAGE",
            "PHONE_SCREEN_30"
          ]
        }
      ]
    },
    {
      "id": "NOTIFICATION_0_60_120_EMI",
      "notification": [
        {
          "notification_details_id": [
            "PHONE_VIBRATE_30_WITH_0_600_1200",
            "PHONE_TONE_30_WITH_0_600_1200",
            "PHONE_MESSAGE_EMI",
            "PHONE_SCREEN_30"
          ]
        }
      ]
    },
    {
      "id": "NOTIFICATION_WITH_DELAY",
      "notification": [
        {
          "notification_details_id": [
            "PHONE_VIBRATE_30_WITH_0_600_1200",
            "PHONE_TONE_30_WITH_0_600_1200",
            "PHONE_MESSAGE_DELAY_10_MINUTE",
            "PHONE_SCREEN_30"
          ]
        }
      ]
    },
    {
      "id": "NOTIFICATION_DURING_DELAY",
      "notification": [
        {
          "notification_details_id": [
            "PHONE_MESSAGE_DURING_DELAY"
          ]
        }
      ]
    },
    {
      "id": "NOTIFICATION_AFTER_DELAY",
      "notification": [
        {
          "notification_details_id": [
            "PHONE_VIBRATE_30_WITH_0_600_1200",
            "PHONE_TONE_30_WITH_0_600_1200",
            "PHONE_MESSAGE_AFTER_DELAY",
            "PHONE_SCREEN_30"
          ]
        }
      ]
    }
  ],
  "application_list": [
    {
      "id": "EVENT_CONTINGENT_ENTRY",
      "application": [
        {
          "package_name": "org.md2k.ema",
          "timeout": "00:10:00",
          "parameter": {
            "filename": "event_contingent_entry.json"
          }
        }
      ]
    },
    {
      "id": "RANDOM_PROMPT",
      "application": [
        {
          "package_name": "org.md2k.ema",
          "timeout": "00:10:00",
          "parameter": {
            "filename": "random_prompt.json"
          }
        }
      ]
    },
    {
      "id": "EMA_MORNING_DIARY",
      "application": [
        {
          "package_name": "org.md2k.ema",
          "timeout": "00:10:00",
          "parameter": {
            "filename": "morning_diary.json"
          }
        }
      ]
    },
    {
      "id": "EMA_EVENING_DIARY",
      "application": [
        {
          "package_name": "org.md2k.ema",
          "timeout": "00:10:00",
          "parameter": {
            "filename": "evening_diary.json"
          }
        }
      ]
    }
  ]
}